---
import {
  CommonHead,
  WebAnalytics,
  ThemeLoader,
  AccentColorInjector,
  PrintVersion,
} from '@/components/head'
import { BackToTopFAB } from '@/components/BackToTopFAB'
import { ToastContainer } from '@/components/ToastContainer'
import { ModalStack } from '@/components/ui/modal'
import { site } from '@/config'
import '@/styles/global.css'

interface Props {
  title?: string
  description?: string
  image?: string
}

const { title, description, image } = Astro.props
---

<!doctype html>
<html lang={site.lang}>
  <head>
    <CommonHead title={title} description={description} image={image} />
    <WebAnalytics />
    <ThemeLoader />
    <AccentColorInjector />
    <PrintVersion />

    <!-- Waline localStorage 拦截器 - 必须在 Waline 加载前执行 -->
    <script is:inline>
      // 避免 Swup 路由切换时重复初始化
      if (!window.__WALINE_STORAGE_INTERCEPTOR_INITIALIZED__) {
        window.__WALINE_STORAGE_INTERCEPTOR_INITIALIZED__ = true

        // 保存原始方法
        const originalSetItem = Storage.prototype.setItem
        const originalRemoveItem = Storage.prototype.removeItem

        // 辅助函数：触发自定义事件
        function dispatchStorageEvent(key, newValue, oldValue) {
          try {
            const event = new CustomEvent('waline:storage', {
              detail: { key, newValue, oldValue },
            })
            window.dispatchEvent(event)
          } catch (e) {
            // 某些严格的 CSP 环境可能会阻止自定义事件
            if (typeof console !== 'undefined' && console.warn) {
              console.warn('[Waline] Failed to dispatch storage event:', e)
            }
          }
        }

        // 覆写 setItem
        Storage.prototype.setItem = function (key, value) {
          const oldValue = this.getItem(key)
          originalSetItem.call(this, key, value)

          if (key === 'WALINE_USER' || key.startsWith('WALINE_')) {
            dispatchStorageEvent(key, value, oldValue)
          }
        }

        // 覆写 removeItem
        Storage.prototype.removeItem = function (key) {
          const oldValue = this.getItem(key)
          originalRemoveItem.call(this, key)

          if (key === 'WALINE_USER' || key.startsWith('WALINE_')) {
            dispatchStorageEvent(key, null, oldValue)
          }
        }
      }
    </script>

    <!-- 全局 Swup 页面初始化监听器 -->
    <script is:inline>
      if (!window.__GLOBAL_SWUP_LISTENER_INITIALIZED__) {
        window.__GLOBAL_SWUP_LISTENER_INITIALIZED__ = true

        // Swup 页面切换后的初始化
        document.addEventListener('swup:page:view', function () {
          // 触发自定义事件，让各个页面自己处理初始化
          const event = new CustomEvent('page:init')
          document.dispatchEvent(event)
        })
      }
    </script>
  </head>
  <body>
    <slot />

    <BackToTopFAB client:idle />
    <ToastContainer client:idle />
    <ModalStack client:idle />
  </body>
</html>
